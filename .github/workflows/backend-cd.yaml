name: Backend CD Workflow

on:
  push:
    branches:
      - main

jobs:
  test:

    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'


      - name: Restore cache and install dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-python-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-python-

      - name: Install dependencies
        run: |      
          cd starter/backend
          pip install pipenv
          pipenv install --deploy --dev
          pipenv run test

  deploy:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker image
        run: |
          cd starter/backend
          docker build -t backend:latest .

      - name: Push Docker image to ECR
        run: |
          cd starter/backend
          docker tag backend:latest 615115875849.dkr.ecr.us-east-1.amazonaws.com/backend:latest
          docker push 615115875849.dkr.ecr.us-east-1.amazonaws.com/backend:latest

      - name: create deployment code 
        uses: jonknutson/kubectl-eks-apply@v2.1.2
        env:
          REGION: us-east-1
          CLUSTER: my-cluster
        with:
          kubectl-command: apply -f starter/backend/k8s/deployment.yaml
      
      - name: expose deployment code 
        uses: jonknutson/kubectl-eks-apply@v2.1.2
        env:
          REGION: us-east-1
          CLUSTER: my-cluster
        with:
          kubectl-command: apply -f starter/backend/k8s/service.yaml
      